<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.account.dao.FinAccountDao">
    
	<sql id="finAccountColumns">
		a.id AS "id",
		a.ac_type AS "acType",
		a.card_num AS "cardNum",
		a.ac_name AS "acName",
		a.amount AS "amount",
		a.dept as "dept"
	</sql>
	
	<sql id="finAccountJoins">
	</sql>
    
	<select id="get" resultType="FinAccount">
		SELECT 
			<include refid="finAccountColumns"/>
		FROM fin_account a
		<include refid="finAccountJoins"/>
		WHERE a.id = #{id}
	</select>

	<select id="getDeptSum" resultType="FinAccount">
		SELECT
		 	sum(a.amount) as "amount",
		 	a.dept as "dept"
		from fin_account a
		<where>
			<if test="dept != null and dept != ''">
				AND a.dept = #{dept}
			</if>
		</where>
	</select>

	<select id="findList" resultType="FinAccount">
		SELECT 
			<include refid="finAccountColumns"/>
		FROM fin_account a
		<include refid="finAccountJoins"/>
		<where>
			
			<if test="id != null and id != ''">
				AND a.id = #{id}
			</if>
			<if test="acType != null and acType != ''">
				AND a.ac_type = #{acType}
			</if>
			<if test="cardNum != null and cardNum != ''">
				AND a.card_num = #{cardNum}
			</if>
			<if test="acName != null and acName != ''">
				AND a.ac_name = #{acName}
			</if>
			<if test="amount != null and amount != ''">
				AND a.amount = #{amount}
			</if>
			<if test="dept != null and dept != ''">
				AND a.dept = #{dept}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="FinAccount">
		SELECT 
			<include refid="finAccountColumns"/>
		FROM fin_account a
		<include refid="finAccountJoins"/>
		<where>
			<if test="dept != null and dept != ''">
				AND a.dept = #{dept}
			</if>
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>

	<select id="getAccountSum"  resultType="FinAccount">
		SELECT
		* ,
		(ret.inAmount - ret.outAmount ) AS amount
		FROM
		(
			SELECT
			a.`id`,
			a.`ac_name`,
			SUM( CASE WHEN r.`in_id` = a.`id` THEN ABS(r.`amount`)
			ELSE 0.0 END ) AS inAmount,
			SUM( CASE WHEN r.`out_id` = a.`id` THEN ABS(r.`amount`)
			ELSE 0.0 END ) AS outAmount
			FROM fin_account a
			LEFT JOIN fin_record r
			ON (a.id = r.`in_id` OR a.`id` = r.`out_id`)
			<where>
				<if test="id != null and  id != ''">
					a.id = #{id}
				</if>
				<if test="dept != null and dept != ''">
					AND a.dept = #{dept}
				</if>
			</where>
			GROUP BY a.`id`
		)
		AS ret
		ORDER BY ac_name

	</select>
	<select id="findAllAccount" resultType="FinAccount">
		SELECT
			a.id as "id",
			a.ac_name as "acName"
		FROM fin_account a
		<include refid="finAccountJoins"/>
		<where>
			<if test="dept != null and dept != ''">
				AND a.dept = #{dept}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>

	<insert id="insert">
		INSERT INTO fin_account(
			id,
			ac_type,
			card_num,
			ac_name,
			amount,
			dept
		) VALUES (
			#{id},
			#{acType},
			#{cardNum},
			#{acName},
			#{amount},
			#{dept}
		)
	</insert>
	
	<update id="update">
		UPDATE fin_account SET 	
			ac_type = #{acType},
			card_num = #{cardNum},
			ac_name = #{acName},
			amount = #{amount},
			dept = #{dept}
		WHERE id = #{id}
	</update>

	<update id="updateAmountById">
		update fin_account set
		amount = amount + #{amount}
		where id = #{id}
	</update>
	
	<update id="delete">
		DELETE FROM fin_account
		WHERE id = #{id}
	</update>
	
</mapper>